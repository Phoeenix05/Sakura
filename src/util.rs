/// Generated by https://quicktype.io
use serde::{Deserialize, Serialize};

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct MangaFeed {
    #[serde(rename = "result")]
    pub result: String,

    #[serde(rename = "response")]
    pub response: String,

    #[serde(rename = "data")]
    pub data: Vec<Chapter>,

    #[serde(rename = "limit")]
    pub limit: i64,

    #[serde(rename = "offset")]
    pub offset: i64,

    #[serde(rename = "total")]
    pub total: i64,
}

impl ToString for MangaFeed {
    fn to_string(&self) -> String {
        format!("{:#?}", self)
    }
}

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct Chapter {
    #[serde(rename = "id")]
    pub id: String,

    #[serde(rename = "type")]
    pub datum_type: String,

    #[serde(rename = "attributes")]
    pub attributes: Attributes,

    #[serde(rename = "relationships")]
    pub relationships: Vec<Relationship>,
}

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct Attributes {
    #[serde(rename = "volume")]
    pub volume: Option<serde_json::Value>,

    #[serde(rename = "chapter")]
    pub chapter: String,

    #[serde(rename = "title")]
    pub title: Option<serde_json::Value>,

    #[serde(rename = "translatedLanguage")]
    pub translated_language: String,

    #[serde(rename = "externalUrl")]
    pub external_url: Option<serde_json::Value>,

    #[serde(rename = "publishAt")]
    pub publish_at: String,

    #[serde(rename = "readableAt")]
    pub readable_at: String,

    #[serde(rename = "createdAt")]
    pub created_at: String,

    #[serde(rename = "updatedAt")]
    pub updated_at: String,

    #[serde(rename = "pages")]
    pub pages: i64,

    #[serde(rename = "version")]
    pub version: i64,
}

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct Relationship {
    #[serde(rename = "id")]
    pub id: String,

    #[serde(rename = "type")]
    pub relationship_type: Type,
}

#[derive(Debug, Serialize, Deserialize, Clone)]
pub enum Type {
    #[serde(rename = "manga")]
    Manga,

    #[serde(rename = "scanlation_group")]
    ScanlationGroup,

    #[serde(rename = "user")]
    User,
}
